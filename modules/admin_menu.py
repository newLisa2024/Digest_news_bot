import logging
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.exceptions import TelegramBadRequest
import config
from modules.subscriber_db import list_subscribers, remove_subscriber


async def cmd_admin_menu(message: Message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        if message.from_user.id not in config.ADMIN_IDS:
            await message.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
            return

        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ—á–µ–∫
        text = "üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é</b> üîß"

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤", callback_data="admin_subscribers")],
            [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞", callback_data="admin_remove")],
            [InlineKeyboardButton(text="‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="admin_send")],
            [InlineKeyboardButton(text="üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")]
        ])

        await message.answer(text, reply_markup=keyboard, parse_mode="HTML")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ cmd_admin_menu: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é.")


async def callback_admin_subscribers(call: CallbackQuery):
    try:
        if call.from_user.id not in config.ADMIN_IDS:
            await call.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
            return

        subscribers = list_subscribers()
        if not subscribers:
            await call.message.answer("–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø—É—Å—Ç.")
            return

        response = "üìã <b>–°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:</b>\n"
        for sub in subscribers:
            user_id = sub.get('user_id', '---')
            username = sub.get('username', '---')
            response += f"üÜî ID: {user_id}, üë§ Username: @{username}\n"

        # –ü—Ä–∏ –¥–ª–∏–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ .edit_text –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É, —Ç–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        try:
            await call.message.edit_text(response, parse_mode="HTML")
        except TelegramBadRequest:
            await call.message.answer(response, parse_mode="HTML")

        await call.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ callback_admin_subscribers: {e}")
        await call.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞.")


async def callback_admin_remove(call: CallbackQuery):
    try:
        if call.from_user.id not in config.ADMIN_IDS:
            await call.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
            return

        await call.message.answer(
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>/remove 123456</code>):",
            parse_mode="HTML"
        )
        await call.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ callback_admin_remove: {e}")
        await call.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")


async def callback_admin_send(call: CallbackQuery):
    try:
        if call.from_user.id not in config.ADMIN_IDS:
            await call.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
            return

        await call.message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<code>/send 123456 –í–∞—à —Ç–µ–∫—Å—Ç</code>",
            parse_mode="HTML"
        )
        await call.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ callback_admin_send: {e}")
        await call.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")


async def callback_admin_broadcast(call: CallbackQuery):
    try:
        if call.from_user.id not in config.ADMIN_IDS:
            await call.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞", show_alert=True)
            return

        await call.message.answer(
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:\n<code>/broadcast –í–∞—à —Ç–µ–∫—Å—Ç</code>",
            parse_mode="HTML"
        )
        await call.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ callback_admin_broadcast: {e}")
        await call.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")



